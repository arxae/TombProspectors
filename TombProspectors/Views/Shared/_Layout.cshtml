@{
	var userRole = User.Claims.FirstOrDefault(c => c.Type == "role")?.Value;
}

<!DOCTYPE html>
<html class="no-js" lang="en">

<head>
	<meta charset="utf-8" />
	<meta http-equiv="x-ua-compatible" content="ie=edge">
	<meta name="viewport" content="width=device-width, initial-scale=1.0" />
	<title>Tomb Prospectors - @ViewBag.Title</title>
	<link rel="stylesheet" href="~/lib/select2/css/select2.min.css" />
	<link rel="stylesheet" href="~/lib/semanticui/components/icon.min.css" />
	<link rel="stylesheet" href="~/lib/semanticui/semantic.custom.css" />
	<link rel="stylesheet" href="~/lib/alertify/css/alertify.min.css" />
	<link rel="stylesheet" href="~/lib/alertify/css/themes/default.min.css" />

	<style>
		.main.container {
			margin-top: 5em;
		}
	</style>

	@RenderSection("Head", false)
</head>

<body>
	<div class="ui fixed inverted menu">
		<div class="ui container">
			<a href="/" class="header item">
				<img src="~/img/top_banner_logo.png" />&nbsp;Tomb Prospectors
			</a>

			<div class="ui simple dropdown item">
				Lists <i class="dropdown icon"></i>
				<div class="menu">
					<a class="item" href="/lists/glyphsbyloot">Glyphs by Loot</a>
					<a class="item" href="/lists/glyphsbyboss">Glyphs by Boss</a>
					<a class="item" href="/lists/glyphsbyrootchalices">Glyphs by Root Chalice</a>
				</div>
			</div>

			@if (User.Identity.IsAuthenticated)
			{
				<a href="/dungeon/addglyph" class="item">New Glyph</a>

				<div class="ui simple dropdown item">
					<i class="user outline icon"></i><i class="dropdown icon"></i>
					<div class="menu">
						<div class="header">@User.Identity.Name</div>
						<a class="item" href="/account/profile">Profile</a>
						<div class="divider"></div>
						<a class="item" href="/account/logout">Logout</a>
					</div>
				</div>

				if (userRole == "admin" || userRole == "moderator")
				{
					<div class="ui simple dropdown item">
						<i class="spy icon"></i><i class="dropdown icon"></i>
						<div class="menu">
							@if (userRole == "admin")
							{
								<div class="header">Admin Options</div>
								<div class="divider"></div>
								<a class="item" href="/administration/newhomepageitem">New homepage item</a>
								<a class="item" href="/administration/usermanagement">User management</a>
							}
						</div>
					</div>
				}
			}
			else
			{
				<a href="/account/register" class="item">Register</a>
				<a href="/account/login" class="item">Login</a>
			}

			<div class="right item">
				<div class="ui icon input">
					<input id="searchInput" type="text" placeholder="Search for loot or glyph...">
					<i id="searchButton" class="search link icon"></i>
				</div>
			</div>
		</div>
	</div>

	<div class="ui main text container">
		@RenderBody()
	</div>

	<script type="text/javascript" src="~/js/jquery-3.2.1.min.js"></script>
	<script type="text/javascript" src="~/lib/semanticui/semantic.min.js"></script>
	<script type="text/javascript" src="~/lib/alertify/alertify.min.js"></script>
	<script type="text/javascript">
		// Setup alertify
		alert = alertify.alert;
		alertify.alert().set({
			"closableByDimmer": false
		});

		$("#searchBtn").on("click",
			function () {
				var query = $("#searchQuery").val();
				var type = $("#searchtype").dropdown("get value");
				window.location.href = "/dungeon/search?t=" + type + "&q=" + query;
			});

		$(document).ready(function () {
			// Control setup
			$(".dropdown").dropdown();
			$("#searchtype").dropdown("set selected", "loot");

			// Control Events
			$("#searchButton").on("click", submitSearch);
			$("#searchInput").on("keydown", function (e) {
				if ($(e.target).is("input") && e.which === 13) {
					submitSearch();
				}
			});
		});

		function submitSearch() {
			var query = $("#searchInput").val();

			if (query.length < 3) {
				alert("Search", "You need to enter at least 3 characters");
				return;
			}

			var type = "loot";

			window.location.href = "/dungeon/search?q=" + query + "&t=" + type;
		}

		// Split that removes empty entries
		String.prototype.split2 = function (delimiter) {
			if (typeof (delimiter) === undefined) {
				return [this]
			}

			return this.split(delimiter).filter(function (e) { return e.length != 0 });
		}
	</script>

	@RenderSection("Script", false)
</body>

</html>