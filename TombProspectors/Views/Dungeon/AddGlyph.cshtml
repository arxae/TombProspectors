@model TombProspectors.Controllers.DungeonController.AddGlyphModel
@{
	Layout = "_Layout";
	ViewBag.Title = "Submit new glyph";
}

<form id="newGlyphForm" class="ui form" action="/dungeon/SubmitNewGlyph" method="post" enctype="multipart/form-data">
	<div class="ui error message"></div>
	<div class="field">
		<label>Dungeon Glyph</label>
		<input type="text" name="DungeonGlyph" placeholder="Glyph" />
	</div>

	<div class="field">
		<label>Short Description</label>
		<input type="text" name="ShortDescription" placeholder="Short Description" />
	</div>

	<div class="two fields">
		<div class="field">
			<select name="RootChalice" class="ui fluid selection search dropdown">
				<option value="">Select Chalice</option>
				@foreach (var c in Model.RootChalices)
				{
					<option value="@c.ChaliceId">@c.ChaliceName</option>
				}
			</select>

		</div>

		<div class="field">
			<div class="ui selection dropdown">
				<input type="hidden" name="Layers">
				<i class="dropdown icon"></i>
				<div class="default text">Layers</div>
				<div class="menu">
					<div class="item" data-value="1">1</div>
					<div class="item" data-value="2">2</div>
					<div class="item" data-value="3">3</div>
					<div class="item" data-value="4">4</div>
					<div class="item" data-value="5">5</div>
				</div>
			</div>
		</div>
	</div>

	<div class="inline fields">
		<label>Additional Rites</label>
		<div class="field">
			<div class="ui checkbox">
				<input type="checkbox" id="fetidCh" />
				@Html.Hidden("Fetid")
				<label for="fetidCh">Fetid</label>
			</div>
		</div>
		<div class="field">
			<div class="ui checkbox">
				<input type="checkbox" id="rottedCh">
				@Html.Hidden("Rotted")
				<label for="rottedCh">Rotted</label>
			</div>
		</div>
		<div class="field">
			<div class="ui checkbox">
				<input type="checkbox" id="cursedCh">
				@Html.Hidden("Cursed")
				<label for="cursedCh">Cursed</label>
			</div>
		</div>
		<div class="field">
			<div class="ui checkbox">
				<input type="checkbox" id="sinisterCh">
				@Html.Hidden("Sinister")
				<label for="sinisterCh">Sinister</label>
			</div>
		</div>
	</div>

	<div class="inline fields">
		<label>Is Save Edited?</label>
		<div class="field">
			<div class="ui checkbox">
				<input type="checkbox" id="saveEditedCh" />
				@Html.Hidden("SaveEdited")
				<label for="saveEditedCh"></label>
			</div>
		</div>
	</div>

	<div class="field">
		<select name="Bosses" class="ui fluid search dropdown" multiple>
			<option value="">Bosses</option>
			@foreach (var boss in Model.Bosses)
			{
				<option value="@boss.Id">@boss.BossName</option>
			}
		</select>
	</div>

	<div class="field">
		<label>Noteable Loot (Specifics can be mentioned in the notes, allows additions). In case of no notable loot, select &quot;Oddity&quot;</label>
		<select name="Loot" class="ui fluid search dropdown allowAdditions" multiple>
			<option value="">Notable loot (Specifics can be mentioned in the notes, allows additions)</option>
			@foreach (var loot in Model.Loot)
			{
				<option value="@loot.Id">@loot.ItemName</option>
			}
		</select>
	</div>

	<div class="field">
		<label>Screenshots</label>
		<input id="screenshotInput" type="file" name="Screenshots" accept=".jpg,.jpeg,.png,.gif" multiple />
	</div>

	<div class="field">
		<label>Notes</label>
		<textarea rows="5" name="Notes" placeholder="Notes"></textarea>
	</div>

	<div class="fluid ui buttons">
		<button type="submit" class="ui button primary">Submit</button>
		<button type="reset" class="ui button negative">Reset</button>
	</div>
</form>

@section Script {
	<script type="text/javascript">
		var validImages = false;

		$(document).ready(function () {
			$(".ui.dropdown").dropdown();
			$(".allowAdditions").dropdown({
				allowAdditions: true
			});

			// Prevent form submission on enter (happens when adding custom loot)
			$(document).on("keydown",
				function (e) {
					if (e.which === 13 && !$(e.target).is("textarea")) {
						e.preventDefault();
						return;
					}
				});

			$("#screenshotInput").on("change",
				function () {
					var valid = [];
					for (var i = 0; i < this.files.length; i++) {
						var file = this.files[i];
						var fileType = file["type"];
						if ($.inArray(fileType, ["image/jpeg", "image/gif", "image/png"]) < 0) {
							valid.push(false);
						} else {
							valid.push(true);
						}
					}

					validImages = allTrue(valid);

					if (validImages === false) {
						alert("Some selected files are not valid and will be ignored");
					}
				});
		});

		// Sync checkboxes with hidden input field
		$('#fetidCh').change(function () { $("#Fetid").val($("#fetidCh").prop("checked")); });
		$('#rottedCh').change(function () { $("#Rotted").val($("#rottedCh").prop("checked")); });
		$('#cursedCh').change(function () { $("#Cursed").val($("#cursedCh").prop("checked")); });
		$('#sinisterCh').change(function () { $("#Sinister").val($("#sinisterCh").prop("checked")); });
		$('#saveEditedCh').change(function () { $("#SaveEdited").val($("#saveEditedCh").prop("checked")); });

		// Validation
		$("#newGlyphForm")
			.form({
				on: "blur",
				fields: {
					DungeonGlyph: {
						identifier: "DungeonGlyph",
						rules: [{ type: "exactLength[8]" }]
					},
					ShortDescription: {
						identifier: "ShortDescription",
						rules: [{ type: "minLength[5]" }]
					},
					Bosses: {
						identifier: "Bosses",
						rules: [{ type: "minCount[1]", primpt: "You need to select at least 1 boss" }]
					},
					Loot: {
						identifier: "Loot",
						rules: [{ type: "minCount[1]", prompt: "You need to select at least 1 piece of loot" }]
					},
					RootChalice: {
						identifier: "RootChalice",
						rules: [{ type: "empty", prompt: "You need to select a root chalice" }]
					},
					Layers: {
						identifier: "Layers",
						rules: [{ type: "empty", prompt: "Please select the amount of layers" }]
					}
				}
			});

		$("#newGlyphForm").submit(function (e) {
			if ($("#newGlyphForm").form("is valid") === false) {
				e.preventDefault();
			}
		});

		function allTrue(obj) {
			for (var o in obj) {
				if (obj[o] === false || obj[o] === "false") {
					return false;
				}
			}
		}
	</script>
}